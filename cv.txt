Objectives
  JD (User Prefs) -> Ranked CVs
  
  User Prefs to express subjectivites (personalised search - learn from history)
  
[Systems]:

JD (User Prefs) -> [Parser] -> Keywords -> [Matcher] -> Selected CV --> [Ranker] --> Ranked CVs

Parser: understands the JD as much as possible and output keywords
  e.g. [job: IT, seniority: senior, role: development]
  
Matcher: Based the the Parser keywords and pick the matched CVs
Expert rules
ML rules

Ranker: sort the CVs according to relevance
Expert ranks
ML ranks: 

Each of the component can have Rule Based (Expert) and/or ML (Machine Learn) part

TF-IDF vs Word2Vec (Frequency vs Co-occurence)

Define the feedback loop: how to collect the labelled data

Label: Relevance score


Rule based: 
  pros: direct, specific, accurate, capture domain knowledges
  cons: not scalable, need manual input, 
  
  
Machine Learn:
  pros: automatic, scalable, discover hidden/new relationship
  cons: need a lot of labelled data, hard to achieve high accurancy and low variance
  
  
